/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package examrecuni4;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.Serializable;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JButton;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ListSelectionModel;

/**
 *
 * @author Zidai
 */
public class componenteBotones extends JPanel implements Serializable{

    //private JList listaNumeros; // lista para guardar numeros enteros
    //private JList copiaLista;
    private JButton botonJButtonCopiar;
    //private JButton botonJButtonMover;
    private JButton botonJButtonMoverIzq;
    private List<Integer> valores;
    private DefaultListModel modelo;
    private DefaultListModel modelo1;
    static int NV = 10;
    
    /** Creates new form componenteBotones */
    public componenteBotones() {
        
        initComponents();
        JPanel panel1 = new JPanel();
        listaNumeros = new JList();
        copiaLista = new JList();
        listaNumeros.setFixedCellWidth(30);
        modelo = new DefaultListModel();
        modelo1 = new DefaultListModel();
        agregar(modelo);
        listaNumeros.setModel(modelo);
        listaNumeros.setVisibleRowCount(10); // muestra cinco filas
        listaNumeros.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        // agrega lista con panel de desplazamiento
        botonJButtonMover = new JButton("Mover >>>"); // crea botón para mover
        botonJButtonMover.addActionListener(new ActionListener() {
            // maneja evento de botón
            public void actionPerformed(ActionEvent evento) {      // coloca los valores seleccionados en copiaLista
                //copiaLista.setListData(listaNumeros.getSelectedValues());
                int ind[] = listaNumeros.getSelectedIndices();
                for (int i = ind.length - 1; i >= 0; i--) {
                    modelo1.addElement(modelo.get(ind[i]));
                    modelo.removeElementAt(ind[i]);
                }
                listaNumeros.clearSelection();
                copiaLista.setModel(modelo1);
                // quita las marcas de seleccion 
            }
            // fin del método actionPerformed
        }); // fin de la llamada a addActionListener
        panel1.add(botonJButtonMover);
        botonJButtonMoverIzq = new JButton("<<< Mover");
        botonJButtonMoverIzq.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int ind[] = copiaLista.getSelectedIndices();
                for(int i = 0; i < ind.length; i++){
                    System.out.println("IN: " + ind[i]);
                    modelo.addElement(modelo1.get(ind[i]));
                    modelo1.removeElementAt(ind[i]);
                }
                copiaLista.clearSelection();
                listaNumeros.setModel(modelo);
            }
        });
        panel1.add(botonJButtonMoverIzq);
        botonJButtonCopiar = new JButton("Copiar");
        botonJButtonCopiar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                for(int i = 0; i < modelo.getSize(); i++){
                    modelo1.addElement(modelo.get(i));
                }
                //modelo.removeAllElements();
                copiaLista.setModel(modelo1);
            }
        });
        panel1.add(botonJButtonCopiar);
        add(panel1, BorderLayout.CENTER);
        copiaLista = new JList();
        copiaLista.setVisibleRowCount(5); // muestra 5 filas
        copiaLista.setFixedCellWidth(30); // establece la anchura
        copiaLista.setFixedCellHeight(15); // establece la altura
        copiaLista.setSelectionMode(
                ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        add(new JScrollPane(listaNumeros), BorderLayout.WEST);
        add(new JScrollPane(copiaLista), BorderLayout.EAST); // agrega lista con panel de desplazamiento

    }
    
    public void agregar(DefaultListModel m){
        for(int e=0; e< NV;e++){ 
            m.add(e,""+e);
        }
    }
    public int getNV(){
        return NV;
    }
    public void setNV(int NV){
        this.NV=NV;
        agregar(modelo);
        listaNumeros.setModel(modelo);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaNumeros = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        copiaLista = new javax.swing.JList<>();
        botonJButtonMover = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        listaNumeros.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "1", "2", "3", "4", "5", "6", "7" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaNumeros);
        listaNumeros.getAccessibleContext().setAccessibleName("listaNumeros");
        listaNumeros.getAccessibleContext().setAccessibleParent(listaNumeros);

        jScrollPane2.setViewportView(copiaLista);
        copiaLista.getAccessibleContext().setAccessibleName("copiaLista");

        botonJButtonMover.setText("Mover");
        botonJButtonMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonJButtonMoverActionPerformed(evt);
            }
        });

        jButton2.setText("Copiar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Recuperar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botonJButtonMover, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(botonJButtonMover)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(143, Short.MAX_VALUE))
        );

        botonJButtonMover.getAccessibleContext().setAccessibleName("botonJButtonMover");
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void botonJButtonMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonJButtonMoverActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_botonJButtonMoverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonJButtonMover;
    private javax.swing.JList<String> copiaLista;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaNumeros;
    // End of variables declaration//GEN-END:variables

}
